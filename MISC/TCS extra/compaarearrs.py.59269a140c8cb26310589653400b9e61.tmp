# You will be given two arrays of integers and asked to determine all integers that satisfy the following two conditions:

# The elements of the first array are all factors of the integer being considered
# The integer being considered is a factor of all elements of the second array
# These numbers are referred to as being between the two arrays. You must determine how many such numbers exist.

# Function Description
# It should return the number of integers that are betwen the sets.
# getTotalX has the following parameter(s):

# a: an array of integers
# b: an array of integers
# Input Format
# The first line contains two space-separated integers,n and m, the number of elements in array a and the number of elements in array b.
# The second line contains distinct n space-separated integers describing a[i] where 0<=i<n.
# The third line contains distinct m space-separated integers describing b[j] where 0<=j<m.
# Output Format
# Print the number of integers that are considered to be between a and b.
# Sample Input
# 2 3
# 2 4
# 16 32 96
# Sample Output
# 3

import sys
from functools import reduce
from fractions import gcd

n, m = map(int, input().split())
a = [int(x) for x in input().split()][:n]
b = [int(x) for x in input().split()][:m]
lcm_a = reduce(lambda x,y: x*y//gcd(x,y), a)
gcd_b = reduce(gcd, b)

print(sum(1 for x in range(lcm_a,gcd_b+1,lcm_a) if gcd_b%x==0))

